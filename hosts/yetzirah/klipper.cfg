# - Taken from https://raw.githubusercontent.com/TheFeralEngineer/Klipper-for-Elegoo-Neptune-series-3D-Printers/main/Neptune%203%20Pro%20config/printer.cfg -
# For the ZNP Robin Nano DW v2.2 board:
#   - Compile with the processor model STM32F401.
#   - Select the 32KiB bootloader,
#   - Select (Serial (on # USART1 PA10/PA9) for the communication interface.
#   - Select (Serial (on # USART2 PA3/PA2) if you want to use the serial UART pins on J17 (wifi section)
# Note that the "make flash" command does not work with ZNP Robin boards. After running "make", run the following command:
# cp out/klipper.bin out/ZNP_ROBIN_NANO.bin
#
# Copy the file out/ZNP_ROBIN_NANO.bin to an SD card and then restart the printer with that SD card.
# See docs/Config_Reference.md for a description of parameters.

[include timelapse.cfg]

[exclude_object]
[virtual_sdcard]
path: /var/lib/moonraker/gcodes

[pause_resume]
[display_status]
# Broken, do not use: [firmware_retraction]
[input_shaper]
[gcode_arcs]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 7.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    SET_IDLE_TIMEOUT TIMEOUT=3600
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
    SET_IDLE_TIMEOUT TIMEOUT=600

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[led LED_Light]
white_pin: PB9
initial_white: 1.0

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 5

[stepper_x]
step_pin: !PC12
dir_pin: PB3
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: PA13
position_endstop: -6.0
position_min: -6
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PC11
dir_pin: PA15
enable_pin: !PC10
microsteps: 16
rotation_distance: 40
endstop_pin: PB8
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PC7
dir_pin: !PC9
enable_pin: !PC8
rotation_distance: 8
microsteps: 16
position_min: -2
position_max: 280
endstop_pin: probe:z_virtual_endstop # Use Z- as endstop
homing_speed: 5.0

[extruder]
max_extrude_only_distance: 101.0
step_pin: PB10
dir_pin: PB1
enable_pin: !PC6
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 300
max_extrude_cross_section: 5
rotation_distance: 7.695

[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
pwm_cycle_time: 0.020 # set to 0.0166 if your grid runs on 60Hz to fix lights flickering
max_temp: 110
min_temp: 0

[heater_fan hotend_fan]
pin: PB0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA7

[force_move]
enable_force_move: True

[safe_z_home]
home_xy_position: 117.5, 117.5
z_hop: 10

[probe]
pin: ^PA8
speed: 5
lift_speed: 15
samples: 1
x_offset: -28
y_offset: 20

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: PB4

[bed_mesh]
speed: 300
horizontal_move_z: 5.0
mesh_min: 10, 25
mesh_max: 205, 205
probe_count: 6,6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[temperature_sensor yetzirah]
sensor_type: temperature_host
#min_temp: 10
#max_temp: 105

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
sensor_temperature1: 25
sensor_adc1: 0.210317
#min_temp: 0
#max_temp: 105

[bed_screws]
screw1: 28, 28
screw1_name: bottom left
screw2: 28, 198
screw2_name: top left
screw3: 180, 198
screw3_name: top right
screw4: 180, 28
screw4_name: bottom right 

[gcode_macro M420]
description: Load the current mesh
gcode:
  BED_MESH_PROFILE LOAD=default
  
[gcode_macro G29]
description: creates automated homing and bed mesh
gcode:
  G28
  BED_MESH_CALIBRATE
  SAVE_CONFIG


# TODO: Get another KUSBA
#[mcu adxl_bed]
#serial: /dev/null

#[adxl345 bed]
#cs_pin: adxl_hotend:gpio1
#spi_software_sclk_pin: adxl_hotend:gpio2
#spi_software_mosi_pin: adxl_hotend:gpio3
#spi_software_miso_pin: adxl_hotend:gpio0

#[mcu adxl_hotend]
#serial: /dev/serial/by-id/usb-Anchor_Rampon-if00

#[adxl345 hotend]
#cs_pin: adxl_bed:CS

#[resonance_tester]
#accel_chip_x: adxl345 hotend
#accel_chip_y: adxl345 bed
#probe_points:
#  120,120,20

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 1.300
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.150000, -0.125000, -0.115000, -0.132500, -0.120000, -0.095000
#*# 	  -0.020000, -0.035000, -0.030000, -0.052500, -0.045000, -0.047500
#*# 	  0.022500, -0.017500, -0.032500, -0.050000, -0.050000, -0.077500
#*# 	  0.082500, 0.032500, 0.010000, -0.030000, -0.042500, -0.070000
#*# 	  0.060000, 0.047500, 0.002500, -0.022500, -0.042500, -0.070000
#*# 	  -0.007500, -0.050000, -0.052500, -0.095000, -0.107500, -0.127500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 6
#*# max_y = 205.0
#*# mesh_x_pps = 2
#*# max_x = 205.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.842
#*# pid_ki = 1.223
#*# pid_kd = 116.230
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.373
#*# pid_ki = 0.735
#*# pid_kd = 1409.769
#*#
#*# [input_shaper]
#*# shaper_type_y = ei
#*# shaper_freq_y = 60.2
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 47.2
