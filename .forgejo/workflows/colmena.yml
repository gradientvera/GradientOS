name: Run Colmena Deployment
on:
  workflow_dispatch:
    inputs:
      # Prefixed with letters for ordering.
      # Stupid solution but...
      a_operation:
        description: Which NixOS build operation to use.
        default: "switch"
        type: choice
        options:
          - switch
          - boot
          - push
      b_hosts:
        description: Which hosts to target.
        required: true
        type: string
      c_build-on-target:
        description: Build on target
        default: false
        required: false
        type: boolean
      d_update-inputs:
        description: Update Flake inputs before deployment?
        default: false
        type: boolean
        required: true
      e_inputs-to-update:
        description: 'Flake inputs to update or empty to update all inputs.'
        default: ""
        type: string
        required: false
env:
  # Listen, listen, listen...
  # Life's too short for this crap, eh?
  NIXPKGS_ALLOW_INSECURE: 1
  NIXPKGS_ALLOW_BROKEN: 1
jobs:
  build:
    runs-on: alpine-latest
    steps:
      - name: Install Lix
        uses: actions/install-lix@v1
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup SSH
        id: setupssh
        uses: actions/setup-ssh@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Setup GradientNet
        uses: ./.forgejo/setup-gradientnet
        with:
          wireguard-private-key: ${{ secrets.WIREGUARD_PRIVATE_KEY }}
      - name: Setup Attic Cache
        uses: ./.forgejo/setup-attic-cache
        with:
          attic-token: ${{ secrets.ATTIC_TOKEN }}
      - name: Install Colmena
        run: nix profile install nixpkgs#lixPackageSets.latest.colmena --inputs-from $FORGEJO_WORKSPACE
      - name: Update flake inputs
        if: ${{ inputs.d_update-inputs }}
        run: nix flake update ${{ inputs.e_inputs-to-update }}
      - name: Fetch flake inputs
        run: nix flake archive --no-update-lock-file
      - name: Run Colmena Apply with build on target
        id: colmenabuild
        if: ${{ inputs.c_build-on-target }}
        continue-on-error: true
        run: colmena apply ${{ inputs.a_operation }} --on "${{ inputs.b_hosts }}" --show-trace --impure --evaluator=streaming --build-on-target 
      - name: Run Colmena Apply with no build on target
        id: colmenabuildnotarget
        if: ${{ !inputs.c_build-on-target }}
        continue-on-error: true
        run: colmena apply ${{ inputs.a_operation }} --on "${{ inputs.b_hosts }}" --show-trace --impure --evaluator=streaming --no-build-on-target
      - name: Commit flake.lock
        if: ${{ inputs.d_update-inputs && steps.colmenabuild.outcome != 'failure' && steps.colmenabuildnotarget.outcome != 'failure' }}
        continue-on-error: true
        run: |
          echo "Configure Git"
          git config --global user.name "Forgejo Deployment"
          git config --global user.email "vera@noreply.git.gradient.moe"
          git config --global user.signingkey '${{ vars.SSH_PUBLIC_KEY }}'
          echo "Commiting and pushing flake.lock"
          git add flake.lock
          git commit -m "Update gradient.moe input"
          git push
          echo "Done!"
      - name: Cache all store paths to Attic
        uses: ./.forgejo/cache-to-attic
      - name: On failure
        if: ${{ steps.colmenabuild.outcome == 'failure' || steps.colmenabuildnotarget.outcome == 'failure' }}
        run: exit 1